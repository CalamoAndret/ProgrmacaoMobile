{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar Stack = createNativeStackNavigator();\nimport * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport Card from \"./screens/Card\";\nimport Location from \"./screens/Location\";\nimport CategoriaDoces from \"./screens/CategoriaDoces\";\nimport Home from \"./screens/Home\";\nimport FrameScreen from \"./screens/FrameScreen\";\nimport SignIn from \"./screens/SignIn\";\nimport SignUp from \"./screens/SignUp\";\nimport SignUp1 from \"./screens/SignUp1\";\nimport HomePage from \"./screens/HomePage\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar App = function App() {\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    hideSplashScreen = _React$useState2[0],\n    setHideSplashScreen = _React$useState2[1];\n  return _jsx(_Fragment, {\n    children: _jsx(NavigationContainer, {\n      children: hideSplashScreen ? _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerShown: false\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"Card\",\n          component: Card,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Location\",\n          component: Location,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"CategoriaDoces\",\n          component: CategoriaDoces,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Home\",\n          component: Home,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Frame26\",\n          component: FrameScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"SignIn\",\n          component: SignIn,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"SignUp\",\n          component: SignUp,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"SignUp1\",\n          component: SignUp1,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"HomePage\",\n          component: HomePage,\n          options: {\n            headerShown: false\n          }\n        })]\n      }) : null\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["Stack","createNativeStackNavigator","React","NavigationContainer","Card","Location","CategoriaDoces","Home","FrameScreen","SignIn","SignUp","SignUp1","HomePage","View","Text","Pressable","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","_React$useState","useState","_React$useState2","_slicedToArray","hideSplashScreen","setHideSplashScreen","children","Navigator","screenOptions","headerShown","Screen","name","component","options"],"sources":["C:/Users/aluno09/Desktop/teste/App.js"],"sourcesContent":["const Stack = createNativeStackNavigator();\nimport * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\n\nimport Card from \"./screens/Card\";\nimport Location from \"./screens/Location\";\nimport CategoriaDoces from \"./screens/CategoriaDoces\";\nimport Home from \"./screens/Home\";\nimport FrameScreen from \"./screens/FrameScreen\";\nimport SignIn from \"./screens/SignIn\";\nimport SignUp from \"./screens/SignUp\";\nimport SignUp1 from \"./screens/SignUp1\";\nimport HomePage from \"./screens/HomePage\";\n\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { View, Text, Pressable, TouchableOpacity } from \"react-native\";\n\nconst App = () => {\n  const [hideSplashScreen, setHideSplashScreen] = React.useState(true);\n\n  return (\n    <>\n      <NavigationContainer>\n        {hideSplashScreen ? (\n          <Stack.Navigator screenOptions={{ headerShown: false }}>\n            <Stack.Screen\n              name=\"Card\"\n              component={Card}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"Location\"\n              component={Location}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"CategoriaDoces\"\n              component={CategoriaDoces}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"Home\"\n              component={Home}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"Frame26\"\n              component={FrameScreen}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"SignIn\"\n              component={SignIn}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"SignUp\"\n              component={SignUp}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"SignUp1\"\n              component={SignUp1}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"HomePage\"\n              component={HomePage}\n              options={{ headerShown: false }}\n            />\n          </Stack.Navigator>\n        ) : null}\n      </NavigationContainer>\n    </>\n  );\n};\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}